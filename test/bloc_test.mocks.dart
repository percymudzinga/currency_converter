// Mocks generated by Mockito 5.3.2 from annotations
// in currency_converter/test/bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:currency_converter/models/currency.dart' as _i5;
import 'package:currency_converter/models/currency_rates_response.dart' as _i3;
import 'package:currency_converter/repositories/currencies_repository.dart'
    as _i4;
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHiveInterface_0 extends _i1.SmartFake implements _i2.HiveInterface {
  _FakeHiveInterface_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCurrencyRatesResponse_1 extends _i1.SmartFake
    implements _i3.CurrencyRatesResponse {
  _FakeCurrencyRatesResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CurrenciesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrenciesRepository extends _i1.Mock
    implements _i4.CurrenciesRepository {
  @override
  _i2.HiveInterface get hive => (super.noSuchMethod(
        Invocation.getter(#hive),
        returnValue: _FakeHiveInterface_0(
          this,
          Invocation.getter(#hive),
        ),
        returnValueForMissingStub: _FakeHiveInterface_0(
          this,
          Invocation.getter(#hive),
        ),
      ) as _i2.HiveInterface);
  @override
  List<_i5.Currency> getCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [],
        ),
        returnValue: <_i5.Currency>[],
        returnValueForMissingStub: <_i5.Currency>[],
      ) as List<_i5.Currency>);
  @override
  _i6.Future<Map<String, dynamic>> loadCurrenciesFromServer() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadCurrenciesFromServer,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
  @override
  _i6.Future<_i3.CurrencyRatesResponse> getCurrencyRates() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrencyRates,
          [],
        ),
        returnValue: _i6.Future<_i3.CurrencyRatesResponse>.value(
            _FakeCurrencyRatesResponse_1(
          this,
          Invocation.method(
            #getCurrencyRates,
            [],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.CurrencyRatesResponse>.value(
            _FakeCurrencyRatesResponse_1(
          this,
          Invocation.method(
            #getCurrencyRates,
            [],
          ),
        )),
      ) as _i6.Future<_i3.CurrencyRatesResponse>);
  @override
  dynamic saveCurrencyToDb(_i5.Currency? currency) => super.noSuchMethod(
        Invocation.method(
          #saveCurrencyToDb,
          [currency],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<dynamic> saveCurrenciesToLocal(List<_i5.Currency>? currencies) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCurrenciesToLocal,
          [currencies],
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> deleteCurrency(_i5.Currency? currency) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCurrency,
          [currency],
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
}
